name: Publish Pipeline
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Publish Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node (NPMJS)
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
      - name: Setup Node (Github Packages)
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: "@jamesgawn"
      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ./node_modules # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - name: NPM Install
        run: npm install --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: NPM Post Install
        run: npm rebuild && npm run prepare --if-present
      - name: Run Build (Build)
        run: tsc
      - name: Run Build (Install)
        run: cp package.json ./dist/package.json && npm install --production --ignore-scripts --prefix ./dist/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Build (Post Install)
        run: npm rebuild --prefix ./dist/ && npm run prepare --if-present --prefix ./dist/
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/jamesgawn/bfi-imax-new-film-notifier
          tag-semver: |
            {{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}